<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TF-IDF on felladog</title><link>https://utsavdarlami.github.io/blogs/tags/tf-idf/</link><description>Recent content in TF-IDF on felladog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 11 Dec 2021 14:29:40 +0545</lastBuildDate><atom:link href="https://utsavdarlami.github.io/blogs/tags/tf-idf/index.xml" rel="self" type="application/rss+xml"/><item><title>text-preprocessing</title><link>https://utsavdarlami.github.io/blogs/notes/2021-03-31--07-12-59z--text_preprocessing/</link><pubDate>Wed, 31 Mar 2021 12:57:00 +0545</pubDate><guid>https://utsavdarlami.github.io/blogs/notes/2021-03-31--07-12-59z--text_preprocessing/</guid><description>References : [Book] Builiding the ML systems with python http://tfidf.com/ Questions : Ways to preprocess text before Feature Extraction in NLP
When preprocessing, we can perform the following:
Eliminate handles and URLs Tokenize the string into words. Remove stop words like &amp;ldquo;and, is, a, on, etc.&amp;rdquo; Stemming or convert every word to its stem. Like dancer, dancing, danced, becomes &amp;lsquo;danc&amp;rsquo;. You can use porter stemmer to take care of this.</description></item></channel></rss>